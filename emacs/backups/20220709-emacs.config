;2022-07-06T07:00:00
(beacon-mode +1)
(cua-mode +1)
(ergoemacs-mode +1)
(setq cua-keep-region-after-copy t)

(define-key key-translation-map (kbd "<prior>") (kbd "<up>"))
(define-key key-translation-map (kbd "<next>") (kbd "<down>"))
(global-set-key (kbd "<home>") 'xah-backward-left-bracket)
(global-set-key (kbd "<end>") 'xah-forward-right-bracket)
(global-set-key (kbd "<f4>") 'neotree-toggle)
(global-set-key (kbd "<f5>") 'split-window-right)
(global-set-key (kbd "<f6>") 'delete-window)
(global-set-key (kbd "<f7>") 'calculator)

(defun insert_timestamp ()
   (interactive)
   (insert (format-time-string "%Y-%m-%dT%H:%M:%S")))

(global-set-key (kbd "<f8>") 'insert_timestamp)


(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(cua-mode t)
 '(package-selected-packages
   '(tern-auto-complete tern auto-complete js2-mode focus neotree)))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
(require 'package)
(add-to-list 'package-archives '("melpa-stable" . "https://stable.melpa.org/packages/") t)
(package-initialize)
(setq make-backup-files nil) ;; stop creating ~ files
(setq create-lockfiles nil) ;; stop creating #file#
(setq remote-file-name-inhibit-locks t)
(setq auto-save-default nil)
(defun neotree-startup ()
  (interactive)
  (neotree-show)
  (call-interactively 'other-window))

(if (daemonp)
    (add-hook 'server-switch-hook #'neotree-startup)
  (add-hook 'after-init-hook #'neotree-startup)
)
(global-auto-complete-mode t)
(add-hook 'prog-mode-hook 'display-line-numbers-mode) ;; display line numbers
;; Don't show the splash screen
(setq inhibit-startup-message t)
(add-to-list 'auto-mode-alist '("\\.js\\'" . js2-mode))
(global-set-key "\C-cd" 'kill-whole-line)
(add-to-list 'load-path "/home/JESUS/projects/tern/emacs/")
(autoload 'tern-mode "tern.el" nil t)
(add-hook 'js-mode-hook (lambda () (tern-mode t)))
(eval-after-load 'tern
   '(progn
      (require 'tern-auto-complete)
      (tern-ac-setup)))

;; Start maximised (cross-platform)
(setq frame-resize-pixelwise t)
(add-hook 'window-setup-hook 'toggle-frame-maximized t)
